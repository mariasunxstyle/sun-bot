import asyncio
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
from steps import steps

API_TOKEN = os.getenv("TOKEN")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

user_states = {}
tasks = {}

def step_keyboard():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=4)
    buttons = []
    for step in steps:
        total_min = sum(p['duration_min'] for p in step['positions'])
        h = int(total_min // 60)
        m = int(total_min % 60)
        label = f"–®–∞–≥ {step['step']} ({f'{h}—á ' if h else ''}{m}–º)"
        buttons.append(KeyboardButton(label))
    for i in range(0, len(buttons), 4):
        kb.add(*buttons[i:i+4])
    kb.add(KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ"))
    return kb

def control_keyboard():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
    kb.add("‚õî –ó–∞–≤–µ—Ä—à–∏—Ç—å")
    kb.add("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –Ω–∞ 2 —à–∞–≥–∞")
    kb.add("üìã –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —à–∞–≥–∞–º")
    return kb

def finish_keyboard():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("‚è≠Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", "‚õî –ó–∞–≤–µ—Ä—à–∏—Ç—å")
    kb.add("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –Ω–∞ 2 —à–∞–≥–∞", "üìã –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —à–∞–≥–∞–º")
    return kb

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(
        '''–ü—Ä–∏–≤–µ—Ç, —Å–æ–ª–Ω—Ü–µ! ‚òÄÔ∏è
–¢—ã –≤ —Ç–∞–π–º–µ—Ä–µ –ø–æ –º–µ—Ç–æ–¥—É —Å—É–ø–µ—Ä–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏.
–ö–æ–∂–∞ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫ —Å–æ–ª–Ω—Ü—É –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ ‚Äî –∏ –∑–∞–≥–∞—Ä —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ä–æ–≤–Ω—ã–º, –≥–ª—É–±–æ–∫–∏–º –∏ –±–µ–∑ –æ–∂–æ–≥–æ–≤.
–¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ —Å–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π –∏ —Å—Ç–∏–º—É–ª–∏—Ä—É–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é –≤—ã—Ä–∞–±–æ—Ç–∫—É –≤–∏—Ç–∞–º–∏–Ω–∞ D,
—Ä–µ–≥—É–ª—è—Ü–∏—é –≥–æ—Ä–º–æ–Ω–æ–≤ –∏ —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∏–º–º—É–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.

–ù–∞—á–∏–Ω–∞–π —Å —à–∞–≥–∞ 1. –î–∞–∂–µ –µ—Å–ª–∏ —É–∂–µ –Ω–µ–º–Ω–æ–≥–æ –∑–∞–≥–æ—Ä–µ–ª(–∞), –≤–∞–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –ø—É—Ç—å —Å –Ω–∞—á–∞–ª–∞.
–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–Ω—å –∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –Ω–∞ 2 —à–∞–≥–∞ –Ω–∞–∑–∞–¥.

–•–æ—á–µ—à—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –ø–æ–¥—Ä–æ–±–Ω–µ–µ ‚Äî –∂–º–∏ ‚ÑπÔ∏è –ò–Ω—Ñ–æ.''',
        reply_markup=step_keyboard()
    )

@dp.message_handler(lambda m: m.text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ")
async def info(message: types.Message):
    await message.answer(
        "‚ÑπÔ∏è –ú–µ—Ç–æ–¥ —Å—É–ø–µ—Ä–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ ‚Äî —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π, –ø–æ—à–∞–≥–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∑–∞–≥–∞—Ä—É.
"
        "–û–Ω –ø–æ–º–æ–≥–∞–µ—Ç –∫–æ–∂–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ —Å–æ–ª–Ω—Ü—É, —Å–Ω–∏–∂–∞—è —Ä–∏—Å–∫ –æ–∂–æ–≥–æ–≤ –∏ –ø—è—Ç–µ–Ω.

"
        "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–≥–æ—Ä–∞—Ç—å —Å 7:00 –¥–æ 11:00 –∏ –ø–æ—Å–ª–µ 17:00 ‚Äî –≤ —ç—Ç–æ –≤—Ä–µ–º—è —Å–æ–ª–Ω—Ü–µ –º—è–≥–∫–æ–µ,
"
        "–∏ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏–π –º–æ–∂–Ω–æ –∑–∞–≥–æ—Ä–∞—Ç—å –±–µ–∑ SPF.
"
        "–¢–∞–∫ –∫–æ–∂–∞ –≤–∫–ª—é—á–∞–µ—Ç —Å–≤–æ—é –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∑–∞—â–∏—Ç—É: –≤—ã—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –º–µ–ª–∞–Ω–∏–Ω –∏ –≥–æ—Ä–º–æ–Ω—ã –∞–¥–∞–ø—Ç–∞—Ü–∏–∏.

"
        "–° 11:00 –¥–æ 17:00 ‚Äî —Å–æ–ª–Ω—Ü–µ –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ. –ï—Å–ª–∏ –æ—Å—Ç–∞—ë—à—å—Å—è –Ω–∞ —É–ª–∏—Ü–µ ‚Äî –Ω–∞–¥–µ–≤–∞–π –æ–¥–µ–∂–¥—É, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π SPF.

"
        "–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–Ω—å –∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –Ω–∞ 2 —à–∞–≥–∞ –Ω–∞–∑–∞–¥.
"
        "–≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –∫–æ–∂–∞ –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞–ª–∞—Å—å –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Å–∏–ª–∏–≤–∞–ª–∞ –∑–∞—â–∏—Ç—É.

"
        "–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏: @sunxbeach_director"
    )